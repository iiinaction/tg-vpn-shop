import asyncio
from aiogram.types import BotCommand, BotCommandScopeDefault
from loguru import logger
from bot import bot, admins, dp, scheduler
from dao.middleware import DatabaseMiddlewareWithCommit, DatabaseMiddlewareWithOutCommit
from client import client
#from app.dao.database import async_session_maker 

#–î–µ—Ñ–æ–ª—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
async def set_commands():
    commands = [BotCommand(command='start', description='–°—Ç–∞—Ä—Ç')]
    await bot.set_my_commands(commands, BotCommandScopeDefault())

#–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è
async def start_bot():
    await set_commands()
    scheduler.start()
    for admin_id in admins:
        try:
            await bot.send_message(admin_id, f'–Ø –∑–∞–ø—É—â–µ–Ωü•≥.')
        except:
            pass
    logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

#–§—É–Ω–∫—Ü–∏—è –∫–æ—Ç–æ—Ä–∞—è –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è –∫–æ–≥–¥–∞ –±–æ—Ç –±—É–¥–µ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω
async def stop_bot():
    try:
        for admin_id in admins:
            await bot.send_message(admin_id, '–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ωüòî')
    except:
        pass
    logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!")

async def main():
    #–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ú–ò–î–õ–í–ê–†–ï–ô
    dp.update.middleware.register(DatabaseMiddlewareWithCommit())
    dp.update.middleware.register(DatabaseMiddlewareWithOutCommit())

    #–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –†–û–£–¢–ï–†–û–í
    dp.include_router(client)
    # dp.include_router(user_router)
    # dp.include_router(admin_router)

    #–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –§–£–ù–ö–¶–ò–ô
    dp.startup.register(start_bot)
    dp.shutdown.register(stop_bot)

    #–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ long polling
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        await dp.start_polling(bot, allowed_updates=dp.resolve_used_update_types())
    
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(main())